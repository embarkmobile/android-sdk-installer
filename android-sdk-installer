#!/usr/bin/env bash

# set -x
set +e

#detecting os
os=linux
if [[ `uname` == 'Darwin' ]]; then
    os=osx
fi

# Constants
ANDROID_SDK_VERSION=25.2.4
if [[ $os == 'linux' ]]; then
    SDK_FILE=tools_r$ANDROID_SDK_VERSION-linux.zip
elif [[ $os == 'osx' ]]; then
    SDK_FILE=tools_r$ANDROID_SDK_VERSION-macosx.zip
fi
SDK_URL=https://dl-ssl.google.com/android/repository/$SDK_FILE

# Defaults
INSTALLER_DIR=$HOME/.android-sdk-installer
INSTALL_ALL="-a"

for i in "$@"
do
case $i in
    --dir=*)
    INSTALLER_DIR=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
    ;;
    --skipAll)
    INSTALL_ALL=""
    ;;
    *)
    # unknown option
    ;;
esac
done

# Expand the path
if [[ $os == 'linux' ]]; then
    INSTALLER_DIR=`readlink -f "$INSTALLER_DIR"`
    export JAVA7_HOME='/usr/lib/jvm/java-7-oracle';
    export JAVA8_HOME='/usr/lib/jvm/java-8-oracle';
    export JAVA_HOME=$JAVA8_HOME
    export ANDROID_HOME=$INSTALLER_DIR/android-sdk-linux
    export TOOLS_DIR=$ANDROID_HOME/tools
    export ANDROID_STORE=/root/.android
elif [[ $os == 'osx' ]]; then
    INSTALLER_DIR=`stat -f "$INSTALLER_DIR"`
    export ANDROID_HOME=$INSTALLER_DIR/android-sdk-macosx
    export TOOLS_DIR=$ANDROID_HOME/tools
    export ANDROID_STORE=$HOME/.android
fi

SDK_MANAGER_PACKAGES_FILE=$INSTALLER_DIR/sdk_package.txt

echo "Cleaning SDK in $INSTALLER_DIR"
rm -rf $INSTALLER_DIR
mkdir -p $INSTALLER_DIR
mkdir -p $ANDROID_HOME
mkdir -p $TOOLS_DIR

echo "Installing SDK in $INSTALLER_DIR"

echo "Downloading SDK"
wget -nv -c -O $INSTALLER_DIR/$SDK_FILE $SDK_URL
echo "Extracting SDK"
unzip -q -o -d $ANDROID_HOME $INSTALLER_DIR/$SDK_FILE

# Setup environment file
echo "export ANDROID_HOME=$ANDROID_HOME" > $INSTALLER_DIR/env
echo "export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$TOOLS_DIR:\$PATH" >> $INSTALLER_DIR/env

# Accept all licences
mkdir -p "$ANDROID_HOME/licenses"
echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"

sdkmanager () {
  "$ANDROID_HOME/tools/bin/sdkmanager" "$@"
}

update_sdkmanager () {
  sdkmanager --update
}

licenses () {
  (while : ; do
  echo 'y'
  sleep 1
  done) | sdkmanager --licenses
}

get_needed_packages () {
  sdkmanager --list --verbose && \
    # This is a hack as 25.2.4- tools do not correctly list paths for sdkmanager
    grep -Riwo -e "path.*>" $ANDROID_STORE | awk -F'path="' -F'"' {'print $2'} | sort | uniq |\
    # Filter packages
    egrep '^\S+'      |\
    sed '/\(---\)/d'  |\
    sed '/\(Info\)/d' |\
    sed '/\(Installed\)/d' |\
    sed '/\(Available\)/d' |\
    sed '/\(sources\)/d' |\
    sed '/\(docs\)/d' |\
    sed '/\(mips\)/d' |\
    sed '/\(intel\)/d' |\
    sed '/\(android-wear\)/d' |\
    sed '/\(usb\)/d' |\
    sed '/\(x86\)/d' |\
    sed '/\(arm64\)/d' |\
    sed '/\(system-images;android-23;default\)/d' |\
    sed '/\(done\)/d' > $SDK_MANAGER_PACKAGES_FILE
}

main () {
# The below are disabled as we currently can't move to sdk tools 25.2.5 since it removes android binary
# and customers are reliant on the utility existing.
# update_sdkmanager
# licenses
 get_needed_packages

 (while : ; do
  echo 'y'
  sleep 1
  done) | sdkmanager --package_file=$SDK_MANAGER_PACKAGES_FILE --verbose
}

main

#create symlink
ln -s $ANDROID_HOME $HOME/.android-sdk